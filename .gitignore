# Создано https://www.toptal.com/developers/gitignore/api/python,pycharm, django
# Редактировать в https://www.toptal.com/developers/gitignore?templates=python,pycharm,django

### Django ###
*.log
*.pot
*.pyc
__pycache__/
local_settings.py
db.sqlite3
db.sqlite3-журнал
медиа

# Если ваш процесс сборки включает запуск collectstatic, то вам, вероятно, не нужно включать staticfiles или вы не хотите их включать/
# в вашем репозитории Git. Соответствующим образом обновите и раскомментируйте следующую строку.
# <django-project-name>/staticfiles/

### Django.Python Stack ###
# Скомпилированные в байтах / оптимизированные / DLL файлы
*.py[cod]
*$py.class

# Расширения C
*.so

# Дистрибутив / упаковка
.Python
сборка/
development-eggs/
dist/
Загрузки/
eggs/
.eggs/
библиотека/
lib64/
части/
sdist/
var/
wheels/
поделиться /python-wheels/
*.egg-информация /
.установлено.cfg
*.egg
МАНИФЕСТ

# PyInstaller
# Обычно эти файлы записываются скриптом python из шаблона
# перед тем, как PyInstaller соберет exe-файл, чтобы ввести в него дату / другую информацию.
* .манифест
*.спецификация

# Журналы установщика
pip-log.txt
pip-delete-this-directory.txt

# Отчеты о модульном тестировании / покрытии
htmlcov/
.токсин/
.nox/
.покрытие
.покрытие.*
.кэш
nosetests.xml
coverage.xml
*.обложка
*.py, обложка
.гипотеза/
.pytest_cache/
обложка/

# Переводы
* .mo

# Материал для Django:

# Материал для Flask:
экземпляр/
.webassets-кэш

# Материал для Scrapy:
.scrapy

# Документация Sphinx
документы/_build/

# PyBuilder
.pybuilder /
target/

# Блокнот Jupyter
.ipynb_checkpoints

# IPython
profile_default/
ipython_config.py

# pyenv
# Для библиотеки или пакета вы можете проигнорировать эти файлы, поскольку код
# предназначен для запуска в нескольких средах; в противном случае проверьте их в:
# .python-версия

# pipenv
# Согласно pypa / pipenv # 598, рекомендуется включать Pipfile .заблокируйте систему управления версиями.
# Однако в случае совместной работы, при наличии зависимостей от конкретной платформы или dependencies
# при отсутствии кроссплатформенной поддержки pipenv может устанавливать зависимости, которые не работают, или не
# установите все необходимые зависимости.
#Pipfile.заблокировать

# poetry
# Аналогично Pipfile.заблокировать, обычно рекомендуется включать poetry.заблокировать в системе управления версиями.
# Это особенно рекомендуется для двоичных пакетов для обеспечения воспроизводимости, и чаще всего
# обычно игнорируется для библиотек.
# https://python-poetry.org/docs/basic-usage/#commit-your-poetrylock-file-to-version-control
#poetry.lock

# pdm
# Аналогично Pipfile.lock, обычно рекомендуется включать pdm.lock в систему управления версиями.
#pdm.lock
# pdm хранит конфигурации всего проекта в .pdm.toml, но рекомендуется не включать его
# в системе управления версиями.
# https://pdm.fming.dev/#use-with-ide
.pdm.toml

# PEP 582; используется, например, в github.com/David-OConnor/pyflow и github.com/pdm-project/pdm
__pypackages__/

# Начинка из сельдерея
celerybeat-расписание
celerybeat.pid

# SageMath проанализировал файлы
*.sage.py

# Среды
.env
.venv
env/
venv/
ENV /
env.bak/
venv.bak/

# Настройки проекта Spyder
.spyderproject
.spyproject

# Настройки проекта Rope
.ropeproject

# документация mkdocs
/сайт

# mypy
.mypy_cache/
.dmypy.json
dmypy.json

# Проверка типов Pyre
.pyre/

# статический анализатор типов pytype
.pytype/

# Символы отладки Cython
cython_debug/

# PyCharm
 Конкретный шаблон # JetBrains поддерживается в отдельном файле JetBrains.gitignore, который можно
# найти по ссылке https://github.com/github/gitignore/blob/main/Global/JetBrains.gitignore
# и который можно добавить в глобальный файл gitignore или объединить с этим файлом. Для более эффективного использования
 параметр # (не рекомендуется) вы можете раскомментировать следующее, чтобы игнорировать всю папку idea.
#.idea/

### PyCharm ###
# Охватывает IDE JetBrains: IntelliJ, RubyMine, PhpStorm, AppCode, PyCharm, CLion, Android Studio, WebStorm и Rider
# Ссылка: https://intellij-support.jetbrains.com/hc/en-us/articles/206544839

# Материалы, предназначенные для конкретного пользователя
.идея / **/workspace.xml
.идея /**/tasks.xml
.идея /**/usage.statistics.xml
.идея /**/ словари
.идея /** / полка

# Зависит от пользователя AWS
.idea /**/aws.xml

# Сгенерированные файлы
.idea / **/contentModel.xml

# Конфиденциальные файлы или файлы с большим оттоком данных
.idea /**/Источники данных/
.idea/**/Источники данных.идентификаторы
.idea/**/dataSources.local.xml
.idea/**/sqlDataSources.xml
.idea/**/dynamic.xml
.idea/***uiDesigner.xml
.idea/***/ .idea/***dbnavigator.xml

# Gradle
.idea/**/gradle.xml
.idea/**/библиотеки

# Gradle и Maven с автоматическим импортом
# При использовании Gradle или Maven с автоматическим импортом вам следует исключить файлы модуля,
# поскольку они будут создаваться заново и могут вызвать отток. Раскомментируйте, если используете
# автоматический импорт.
# .идея / артефакты
# .idea/compiler.xml
# .idea/jarRepositories.xml
# .idea/modules.xml
# .идея / *.iml
# .идея / модули
# *.iml
# *.пис

# CMake
cmake-сборка-*/

# Плагин Mongo Explorer
.idea / **/mongoSettings.xml

# Формат проекта на основе файлов
*.iws

# IntelliJ
выход/

# mpeltonen/sbt-плагин idea
.idea_модули/

# Плагин JIRA
atlassian-ide-plugin.xml

# Плагин Cursive Clojure
.idea/replstate.xml

# Плагин SonarLint
.idea / sonarlint/

# Плагин Crashlytics (для Android Studio и IntelliJ)
com_crashlytics_export_strings.xml
crashlytics.свойства
crashlytics-сборка.свойства
fabric.свойства

# Клиент Rest на основе редактора
.идея/HttpRequests

# Android studio 3.1+ сериализованный файл кэша
.idea/caches/build_file_checksums.ser

### Исправление PyCharm ###
# Причина комментария: https://github.com/joeblau/gitignore.io/issues/186#issuecomment-215987721

# *.iml
# modules.xml
# .idea/misc.xml
# *.ipr

# Плагин Sonarlint
# https://plugins.jetbrains.com/plugin/7973-sonarlint
.idea/**/sonarlint/

# Плагин SonarQube
# https://plugins.jetbrains.com/plugin/7238-sonarqube-community-plugin
.idea/**/sonarIssues.xml

# Плагин Markdown Navigator
# https://plugins.jetbrains.com/plugin/7896-markdown-navigator-enhanced
.idea/**/markdown-navigator.xml
.idea/**/markdown-navigator-enh.xml
.idea/***/markdown-навигатор/

# Ошибка при создании файла кэша
# Смотрите https://youtrack.jetbrains.com/issue/JBR-2257
.idea / $CACHE_FILE $

# Плагин CodeStream
# https://plugins.jetbrains.com/plugin/12206-codestream
.idea/codestream.xml

# Azure Toolkit для плагина IntelliJ
# https://plugins.jetbrains.com/plugin/8053-azure-toolkit-for-intellij
.idea /**/azureSettings.xml

### Python ###
# Скомпилированные в байтах / оптимизированные / DLL файлы

# Расширения C

# Дистрибутив / упаковка

# PyInstaller
# Обычно эти файлы записываются скриптом python из шаблона
# перед сборкой PyInstaller exe, чтобы ввести в него дату / другую информацию.

# Журналы установки

# Отчеты о модульном тестировании / покрытии

# Переводы

# Материал для Django:

# Материал для Flask:

# Материал для Scrapy:

# Документация Sphinx

# PyBuilder

# Записная книжка Jupyter

# IPython

# pyenv
# Для библиотеки или пакета вы можете проигнорировать эти файлы, поскольку код
# предназначен для запуска в нескольких средах; в противном случае проверьте их в:
# .python-версия

# pipenv
# Согласно pypa / pipenv # 598, рекомендуется включить Pipfile .заблокировать систему управления версиями.
# Однако, в случае совместной работы, при наличии зависимостей, зависящих от платформы, или зависимостей
# не имея кроссплатформенной поддержки, pipenv может устанавливать зависимости, которые не работают, или вообще не устанавливать
# установите все необходимые зависимости.

# поэзия
# Аналогично Pipfile.lock , обычно рекомендуется включать poetry.lock в системе управления версиями.
# Это особенно рекомендуется для двоичных пакетов для обеспечения воспроизводимости и чаще всего игнорируется для библиотек.
#
# https://python-poetry.org/docs/basic-usage/#commit-your-poetrylock-file-to-version-control

# pdm
# Аналогично Pipfile.lock, обычно рекомендуется включать pdm.lock в систему управления версиями.
# pdm хранит конфигурации всего проекта в .pdm.toml , но рекомендуется не включать его
# в системе управления версиями.
# https://pdm.fming.dev/#use-with-ide

# PEP 582; используется, например, github.com/David-OConnor/pyflow и github.com/pdm-project/pdm

# Материал из сельдерея

# Файлы, проанализированные SageMath

# Среды

# Настройки проекта Spyder

# Настройки проекта Rope

# документация mkdocs

# mypy

# Проверка типа Pyre

# статический анализатор типов pytype

# Символы отладки Cython

# PyCharm
 Конкретный шаблон # JetBrains поддерживается в отдельном JetBrains.gitignore, который может
# находится по адресу https://github.com/github/gitignore/blob/main/Global/JetBrains.gitignore
# и может быть добавлен в глобальный gitignore или объединен в этот файл. Для более ядерного
# опция (не рекомендуется) вы можете раскомментировать следующее, чтобы игнорировать всю папку idea.

### Исправление для Python ###
# Файл локальной конфигурации Poetry - https://python-poetry.org/docs/configuration/#local-configuration
poetry.toml

# ruff
.ruff_cache/

# Файлы конфигурации LSP
pyrightconfig.json

# Конец работы https://www.toptal.com/developers/gitignore/api/python, pycharm, django